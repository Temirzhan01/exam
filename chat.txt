package main

import (
	"fmt"
	"halykbpm-git.homebank.kz/business-processes/compraIP/app"
	"halykbpm-git.homebank.kz/business-processes/compraIP/config"
	"halykbpm-git.homebank.kz/business-processes/compraIP/docs"
	"os"
)

func main() {
	configs := config.New("config.json")
	if os.Getenv("APP_MODE") == "development" {
		docs.SwaggerInfo.Host = fmt.Sprintf("localhost:%d", configs.ServerPort)
	}
	app.Start(configs)
}


package app

import (
	"fmt"
	"net"
	"net/http"
	"time"

	"halykbpm-git.homebank.kz/business-processes/compraIP/config"
	"halykbpm-git.homebank.kz/business-processes/compraIP/handler"
	"halykbpm-git.homebank.kz/business-processes/compraIP/repository/taxes"
	"halykbpm-git.homebank.kz/business-processes/compraIP/router"
	"halykbpm-git.homebank.kz/business-processes/compraIP/service"
	"halykbpm-git.homebank.kz/business-processes/compraIP/util/logger"
)

//Start ...
func Start(config *config.Config) {
	log := logger.NewLogger(config.ESURL, config.LogLevel)

	tout := time.Duration(config.ServiceTimeoutSeconds) * time.Second
	var client *http.Client
	var defaultTransport http.RoundTripper = &http.Transport{
		Proxy: http.ProxyFromEnvironment,
		DialContext: (&net.Dialer{
			Timeout:   10 * time.Second,
			KeepAlive: 10 * time.Second,
			DualStack: true,
		}).DialContext,
		ForceAttemptHTTP2:     true,
		MaxIdleConns:          200,
		MaxIdleConnsPerHost:   100,
		IdleConnTimeout:       30 * time.Second,
		TLSHandshakeTimeout:   10 * time.Second,
		ExpectContinueTimeout: 1 * time.Second,
		MaxConnsPerHost:       30,
	}
	if config.LogServiceRequests && !config.ReleaseMode {
		client = &http.Client{
			Transport: logger.NewLoggedRoundTripper(http.DefaultTransport, logger.NewDefaultLogger()),
			Timeout:   tout,
		}
	} else {
		client = &http.Client{
			Transport: defaultTransport,
			Timeout:   tout,
		}
	}

	store := taxes.New(service.NewCompraService(log, config, service.WithHTTPClient(client)))

	h := handler.NewHandler(store, config, log)
	r := router.InitRouter(h, config.ReleaseMode)

	log.Info("compraIP", "START", "Starting", "", "", "", "", nil)
	if err := r.Run(fmt.Sprintf(":%d", config.ServerPort)); err != nil {
		log.Fatal("compraIP", "START", -1, "Failed start server", "", "", "", "", nil)
	}
}


package config

import (
	"github.com/spf13/viper"
	"log"
)

// Config ...
type Config struct {
	ServerPort            int    `json:"serverPort"`
	ReleaseMode           bool   `json:"releaseMode"`
	ServiceTimeoutSeconds int    `json:"serviceTimeoutSeconds"`
	LogLevel              string `json:"logLevel"`
	LogServiceRequests    bool   `json:"logServiceRequests"`
	CompraUrl             string `json:"compraUrl"`
	ESURL                 string `json:"ESURL"`
	CompraAuthToken       string `json:"compraAuthToken"`
}

func New(path string) *Config {
	viper.SetConfigFile(path)
	viper.AutomaticEnv()

	if err := viper.ReadInConfig(); err != nil {
		log.Fatalf("Error reading config file, %s", err)
	}

	var config Config
	if err := viper.Unmarshal(&config); err != nil {
		log.Fatalf("Unable to decode into struct, %v", err)
	}

	return &config
}
module halykbpm-git.homebank.kz/business-processes/compraIP

go 1.17

require (
	github.com/alecthomas/template v0.0.0-20190718012654-fb15b899a751
	github.com/gin-gonic/gin v1.7.7
	github.com/pkg/errors v0.9.1
	github.com/spf13/viper v1.8.1
	github.com/swaggo/gin-swagger v1.3.3
	github.com/swaggo/swag v1.7.4
	halykbpm-git.homebank.kz/HomeBank/elastic-logger.v3 v0.0.0-20211214060908-8d08b31ee879
	halykbpm-git.homebank.kz/business-processes/service.response v1.0.0
)

require (
	github.com/KyleBanks/depth v1.2.1 // indirect
	github.com/PuerkitoBio/purell v1.1.1 // indirect
	github.com/PuerkitoBio/urlesc v0.0.0-20170810143723-de5bf2ad4578 // indirect
	github.com/fsnotify/fsnotify v1.4.9 // indirect
	github.com/gabriel-vasile/mimetype v1.4.2 // indirect
	github.com/gin-contrib/sse v0.1.0 // indirect
	github.com/go-openapi/jsonpointer v0.19.5 // indirect
	github.com/go-openapi/jsonreference v0.19.5 // indirect
	github.com/go-openapi/spec v0.20.3 // indirect
	github.com/go-openapi/swag v0.19.14 // indirect
	github.com/go-playground/locales v0.14.1 // indirect
	github.com/go-playground/universal-translator v0.18.1 // indirect
	github.com/go-playground/validator/v10 v10.14.0 // indirect
	github.com/golang/protobuf v1.5.2 // indirect
	github.com/hashicorp/hcl v1.0.0 // indirect
	github.com/josharian/intern v1.0.0 // indirect
	github.com/json-iterator/go v1.1.12 // indirect
	github.com/leodido/go-urn v1.2.4 // indirect
	github.com/magiconair/properties v1.8.5 // indirect
	github.com/mailru/easyjson v0.7.6 // indirect
	github.com/mattn/go-isatty v0.0.19 // indirect
	github.com/mitchellh/mapstructure v1.4.1 // indirect
	github.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd // indirect
	github.com/modern-go/reflect2 v1.0.2 // indirect
	github.com/pelletier/go-toml v1.9.3 // indirect
	github.com/spf13/afero v1.6.0 // indirect
	github.com/spf13/cast v1.3.1 // indirect
	github.com/spf13/jwalterweatherman v1.1.0 // indirect
	github.com/spf13/pflag v1.0.5 // indirect
	github.com/stretchr/testify v1.8.3 // indirect
	github.com/subosito/gotenv v1.2.0 // indirect
	github.com/ugorji/go/codec v1.2.11 // indirect
	golang.org/x/crypto v0.9.0 // indirect
	golang.org/x/net v0.10.0 // indirect
	golang.org/x/sys v0.8.0 // indirect
	golang.org/x/text v0.9.0 // indirect
	golang.org/x/tools v0.6.0 // indirect
	google.golang.org/protobuf v1.30.0 // indirect
	gopkg.in/ini.v1 v1.62.0 // indirect
	gopkg.in/yaml.v2 v2.4.0 // indirect
	halykbpm-git.homebank.kz/EPAY2/luhn v0.0.0-20200618124840-d046ec9137c9 // indirect
)
